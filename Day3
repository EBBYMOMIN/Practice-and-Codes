---------------------------------------------------------------------------------------------------------------------------
Q... Reverse a String.
Write a program that takes a string as input and outputs the reversed version of the string.

Problem Description
- Write a Python program that:
- Takes a string as input from the user.
- Reverses the string using one of the following methods:
- Slicing
- A loop
- Outputs the reversed string.
---------------------------------------------------------------------------------------------------------------------------

#creating a function to reverse the string
def rev_string(string):
    reverse_string = string[::-1]
    return reverse_string

#taking input from the user.
string_1 = input("Enter a string you want to reverse: ")
print(f"The entered string is {string_1}")

#calling the function.
reversed_str1 = rev_string(string_1)
reversed_str = reversed_str1.title()

#printing the output.
print(f"The reversed string for the given string is {reversed_str}")

---------------------------------------------------------------------------------------------------------------------------
Q... Check for Anagram

- Write a function to check if two given strings are anagrams of each other. Two strings are considered anagrams if they contain the same characters in the same frequency, regardless of their order.

Problem Description
- Write a Python program that:

- Takes two strings as input from the user.
- Checks if the two strings are anagrams of each other.
- Outputs whether the strings are anagrams or not.

Steps to Solve
- Normalize the strings by removing spaces and converting them to lowercase.
- Sort the characters of both strings.
- Compare the sorted versions; if they are the same, the strings are anagrams.
-----------------------------------------------------------------------------------------------------------------------------

def is_anagram(string1 , string2):
    #normalise strings : removing whitespaces and converting to lower case.
    string1 = string1.replace(" ", "").lower()
    string2 = string2.replace(" ", "").lower()
    
    #check if sorted version are the same.
    return sorted(string1) == sorted(string2)

#taking input from the user.
str1 = input("Enter the First String: ")
str2 = input("Enter the Second String: ")

#printing the user output
print(f"The first string entered is {str1}")
print(f"The second string entered is {str2}")

#calling the function.
anagram = is_anagram(str1, str2)

#checking conditions and returning results:
if anagram:
    print("The string is ANAGRAM")
else:
    print("The string is NOT ANAGRAM")

-----------------------------------------------------------------------------------------------------------------------------
Q... Fibonacci Sequence Using Recursion.

Write a recursive function to generate the first n numbers in the Fibonacci sequence. Then, display the sequence as a list.


Let's work on Fibonacci Sequence Using Recursion as your Advanced Problem for today.

Problem Description
- Write a recursive function that computes the first n numbers in the Fibonacci sequence.
- The Fibonacci sequence is defined as:
- F(0) = 0
- F(1) = 1
- F(n) = F(n-1) + F(n-2) for n >= 2
- Use the function to display the sequence as a list.

Steps to Solve
- Define the Recursive Function:
- Base cases are F(0) = 0 and F(1) = 1. Use recursion for F(n) = F(n-1) + F(n-2).
- Generate the Sequence:
- Call the recursive function repeatedly to generate the first n Fibonacci numbers.
- Display the Result as a List.
------------------------------------------------------------------------------------------------------------------------------

#Define a function for Recursion
def fibonacci(n):
    if n == 0:
        return 0
    elif n == 1:
        return 1
    else:
        return fibonacci (n-1) + fibonacci(n-2)

#Generating fibonacci sequence.
def fibonacci_sequence(num):
    sequence = []
    for i in range(num):
        sequence.append(fibonacci(i))
    return sequence

#Taking input from user.
try:
    n = int(input("Enter a number to find the fibonacci sequence: "))
    if n < 0:
        print("Please enter a positive integer.")
    else:
        #Generating result in fibonacci sequence.
        result = fibonacci_sequence(n)
        print(f"The Fibonacci Sequence of {n} is {result}")
except ValueError:
    print("The entered value is incorrect.")
